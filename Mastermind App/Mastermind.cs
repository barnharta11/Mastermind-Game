using Figgle;
using System;
using System.Collections.Generic;
using System.Text;

namespace Mastermind_App
{
    class Mastermind
    {
        //Could I make the user guess a prop for this class and then refer to it in all the methods?
        
        //public string userGuess = Console.ReadLine();


        public void PrintInstructions()
        {
            Console.ForegroundColor = ConsoleColor.DarkCyan;
            Console.WriteLine($"{FiggleFonts.Ogre.Render("Mastermind")}");
            Console.ForegroundColor = ConsoleColor.White;
            Console.WriteLine($"\nWelcome to Mastermind!\n\nYou have 10 attempts to guess the 4 digits randomly generated by the computer." +
                   $"\nEach number is in the range of 1-6. You will get (+) for correct numbers and " +
                   $"\nlocations, (-) for numbers that are correct but it the wrong location, " +
                   $"\nbut it the wrong location, and (_) for numbers that are neither.");
        }

        public bool CheckGuess(int remainingAttempts, string userGuess)
        {

            if (string.IsNullOrEmpty(userGuess) || userGuess.Contains(','))
            {
                Console.ForegroundColor = ConsoleColor.Red;
                Console.WriteLine($"\nWrong format. Please enter 4 numbers seperated by space.");
                Console.ForegroundColor = ConsoleColor.White;
                remainingAttempts++;
                return false;
            }
            return true;

        }

        public bool ValidateInput(int remainingAttempts, string userGuess)
        {
            
            int [] userGuessArray = UserGuessArray(userGuess);

            for (int i = 0; i < userGuessArray.Length; i++)
            {
                if (userGuessArray[i] < 1 || userGuessArray[i] > 6)
                {
                    Console.ForegroundColor = ConsoleColor.Red;
                    Console.WriteLine($"\nYour guess: {userGuess}. Numbers need to be between 1-6. Try again.");
                    Console.ForegroundColor = ConsoleColor.White;
                    remainingAttempts++;
                    return false;
                }

            }
            return true;
        }

        public void PrintInputGuess(int remainingAttempts)
        {
            if (remainingAttempts == 10)
            {

                Console.Write($"\nPlease enter 4 numbers (seperated by space) to get started:");
            }
            else
            {
                Console.Write($"\nEnter your next guess:");
            }

        }

        //public bool GetGuess(int remainingAttempts)
        //{
        //    if (remainingAttempts == 10)
        //    {

        //        Console.Write($"\nPlease enter 4 numbers (seperated by space) to get started:");
        //    }
        //    else
        //    {
        //        Console.Write($"\nEnter your next guess:");
        //    }

        //    string userGuess = Console.ReadLine();
        //    if (string.IsNullOrEmpty(userGuess) || userGuess.Contains(',') || !userGuess.Contains(' '))
        //    {
        //        Console.ForegroundColor = ConsoleColor.Red;
        //        Console.WriteLine($"\nWrong format. Please enter 4 numbers seperated by space.");
        //        return false;
        //    }
        //    return true;
        //}

        //public void PrintResults(string response, string rightAnswer, int[] computerGuessArray, int remainingAttempts/*, bool keepPlaying*/)
        //{
        //    if (response.Contains(rightAnswer))
        //    {
        //        //this is the correct answer response and asks if player wants to play again
        //        Console.WriteLine();
        //        Console.ForegroundColor = ConsoleColor.Green;
        //        Console.WriteLine("***Correct!***");
        //        Console.ForegroundColor = ConsoleColor.White;
        //        Console.WriteLine($"Computer Numbers were ({computerGuessArray[0]}, {computerGuessArray[1]}, {computerGuessArray[2]}, {computerGuessArray[3]}) results: ({response})");
        //        Console.WriteLine();
        //        Console.ForegroundColor = ConsoleColor.Yellow;
        //        Console.Write("Play again? (Y/N)");
        //        //PlayAgain(keepPlaying);

        //    }
        //    else if (!response.Contains(rightAnswer) && remainingAttempts == 1)
        //    {
        //        Console.WriteLine();
        //        Console.ForegroundColor = ConsoleColor.Red;
        //        Console.WriteLine("***Incorrect*** ");
        //        Console.ForegroundColor = ConsoleColor.White;
        //        Console.Write("Sorry, out of attempts!");
        //        Console.WriteLine();
        //        Console.ForegroundColor = ConsoleColor.Yellow;
        //        Console.Write("Play again? (Y/N)");
        //        //PlayAgain(keepPlaying);
        //    }
        //    else if (!response.Contains(rightAnswer) && remainingAttempts > 1)
        //    {
        //        remainingAttempts--;
        //        Console.WriteLine();
        //        Console.ForegroundColor = ConsoleColor.Red;
        //        Console.WriteLine("***Incorrect*** ");
        //        Console.ForegroundColor = ConsoleColor.White;
        //        Console.WriteLine($"Your results: ({response}) Remaining Attempts: {remainingAttempts}");
        //    }

        //}
        public void PlayAgain(bool keepPlaying, int remainingAttempts)
        {
            string playAgainW = Console.ReadLine();
            if (playAgainW.ToUpper().Contains('Y'))
            {
                
                remainingAttempts = 10;
                int[] newGame = ComputerArray();
                keepPlaying = true;

            }
            else
            {
                keepPlaying = false;
                Console.ForegroundColor = ConsoleColor.DarkCyan;
                Console.WriteLine("Thanks for playing. Goodbye!");

            }
        }

        public int[] ComputerArray()
        {
            int randomNumbers = 0;
            int[] computerArray = new int[4];
            Random randomNumber = new Random();

            //looped through to add 4 numbers to array instead of manually setting them (easy to do with 4 numbers but "in case" future games want 10, etc)
            for (int i = 0; i < computerArray.Length; i++)
            {
                randomNumbers = randomNumber.Next(1, 6);
                computerArray[i] = randomNumbers;
            }

            return computerArray;
        }

        public int[] UserGuessArray(string userGuess)
        {
            string[] stringArray = userGuess.Split(" ");
            int[] userArray = new int[stringArray.Length];

            for (int i = 0; i < stringArray.Length; i++)
            {
                userArray[i] = int.Parse(stringArray[i]);
            }
            return userArray;

        }

        public string CompareArrays(int[] computerArray, string userGuess)
        {
            int [] userGuessArray = UserGuessArray(userGuess);
            bool[] correctDigit = new bool[4];

            string responsePlus = "";
            string responseMinus = "";
            string responseBlank = "";


            for (int i = 0; i < computerArray.Length; i++)
            {

                if (userGuessArray[0] == computerArray[0] && i == 0)
                {
                    responsePlus += "+";
                    correctDigit[0] = true;
                }
                if (userGuessArray[1] == computerArray[1] && i == 1)
                {
                    responsePlus += "+";
                    correctDigit[1] = true;
                }
                if (userGuessArray[2] == computerArray[2] && i == 2)
                {
                    responsePlus += "+";
                    correctDigit[2] = true;
                }
                if (userGuessArray[3] == computerArray[3] && i == 3)
                {
                    responsePlus += "+";
                    correctDigit[3] = true;
                }
            }

            for (int i = 0; i < computerArray.Length; i++)
            {

                if (!correctDigit[i])
                {
                    if (userGuessArray[i] == computerArray[0] || userGuessArray[i] == computerArray[1] || userGuessArray[i] == computerArray[2] || userGuessArray[i] == computerArray[3])
                    {
                        responseMinus += "-";
                    }
                    else
                    {
                        responseBlank += "_";
                    }
                }
            }
            return $"{responsePlus}{responseMinus}{responseBlank}";
        }

        public void CorrectAnswer(int[] computerGuessArray, bool keepPlaying, string response, int remainingAttempts)
        {
            Console.WriteLine();
            Console.ForegroundColor = ConsoleColor.Green;
            Console.WriteLine("***Correct!***");
            Console.ForegroundColor = ConsoleColor.White;
            Console.WriteLine($"Computer Numbers were ({computerGuessArray[0]}, {computerGuessArray[1]}, {computerGuessArray[2]}, {computerGuessArray[3]}) results: ({response})");
            Console.WriteLine();
            Console.ForegroundColor = ConsoleColor.Yellow;
            Console.Write("Play again? (Y/N)");
            Console.ForegroundColor = ConsoleColor.White;
            PlayAgain(keepPlaying, remainingAttempts);
        }
        public void OutOfTries(bool keepPlaying, int remainingAttempts)
        {
            Console.WriteLine();
            Console.ForegroundColor = ConsoleColor.Red;
            Console.WriteLine("***Incorrect*** ");
            Console.ForegroundColor = ConsoleColor.White;
            Console.Write("Sorry, out of attempts!");
            Console.WriteLine();
            Console.ForegroundColor = ConsoleColor.Yellow;
            Console.Write("Play again? (Y/N)");
            Console.ForegroundColor = ConsoleColor.White;
            PlayAgain(keepPlaying, remainingAttempts);
        }

        public void WrongAnswer(int remainingAttempts, string response)
        {
            Console.WriteLine();
            Console.ForegroundColor = ConsoleColor.Red;
            Console.WriteLine("***Incorrect*** ");
            Console.ForegroundColor = ConsoleColor.White;
            Console.WriteLine($"Your results: ({response}) Remaining Attempts: {remainingAttempts}");
        }

    }
}
